class:: BStore
summary:: Radicles Buffer Store
related:: Classes/Store
categories:: Libraries>Radicles

Description::

Manage Buffers for Radicles

classmethods::

method::add

Add a new BStore object.

argument::
type setting.
argument::
settings.
argument::
format

method::remove

Removes BStore object.

argument::
type setting.
argument::
settings.
argument::
format.

Examples::

code::
BStore.playFormat = \scpv;
BStore.playFormat = \audio;

BStore.add(\play, \marilyn1);
BStore.add(\play, \marilyn1, {|buf| buf.play});

BStore.add(\play, \SinedPink);

BStore.add(\alloc, [\alloc0, 44100,2]);
BStore.add(\alloc, [\alloc1, 44100,2]);

BStore.add(\cue, [\cue1, \marilyn1], {|buf| buf.postln });
BStore.add(\cue, [\cue2, \marilyn1], {|buf| buf.postln });

BStore.bstoreIDs
BStore.bstores.dopostln

BStore.bstoreIDs
BStore.bstores

BStore.bstores.flat.do{|item| item.postln};

BStore.removeBStores;

BStore.add(\cue, [\cue1, \marilyn1], {|buf| {DiskIn.ar(buf.numChannels, buf.bufnum, 1)}.play } );
BStore.add(\cue, [\cue2, \marilyn1], {|buf| {DiskIn.ar(buf.numChannels, buf.bufnum, 1)}.play } );
BStore.add(\play, \marilyn1, {|buf| buf.play});
BStore.add(\alloc, [\alloc0, 44100,2]);
BStore.add(\alloc, [\alloc1, 44100,2]);

BStore.buffByType(\cue); //get buffers by type
BStore.buffByFormat(\cue1);  //get buffers by format
BStore.buffByFormat(\cue2);
BStore.buffByFormat(\alloc0);
BStore.buffBySetting(\marilyn1).dopostln; //get buffers by setting
BStore.buffBySetting([44100,2]).dopostln;


BStore.samplerFormat = \audio;

BStore.add(\sampler, \str, {|buf| buf.postln});

BStore.removeByIndex(0)

BStore.bstoreIDs

BStore.removeID([\cue, \cue2, \marilyn1]);

BStore.removeByType(\play);
BStore.removeByType(\alloc);
BStore.removeByType(\sampler);
BStore.bstoreIDs
BStore.bstores.do{|item| item.do{|it| it.postln}};

BufferSystem.bufferArray.dopostln;

DataFile.read(\sampler).postin(\ide, \doln);

BStore.add(\sampler, \hhk, {|buf| buf.do{|item| item.play } });
BStore.add(\sampler, \tom, {|buf| buf.do{|item| item.play } });

BStore.removeBySetting(\hhk);
BStore.removeBySetting(\tom);

BStore.bstoreIDs.dopostln
BStore.stores.flat.dopostln

BStore.loadBPreset(\test, {|buf| buf.postln});

BStore.bstoreIDs.dopostln;
BStore.remove(\sampler, \audio, \hhk);
BStore.remove(\sampler, \audio, \tom);

BStore.add(\sampler, \gt1, {|buf| buf.postln});

BStore.bstoreIDs;

a = BStore.bstoreIDs;

BStore.removeAll;
//or
BStore.removeBStores;

BStore.addAll(a, {|buf| buf.postln});

BStore.saveBPreset(\test2);
BStore.removeBStores;

BStore.loadBPreset(\test2, {|buf| buf.postln});

BufferSystem.bufferArray.dopostln;

BufferSystem.bufferArray[0]
::