class:: ModMap
summary:: A tool for modulating Ndefs
related:: Classes/Ndef
categories:: Libraries>ModImprov

Description::

A tool for modulating Ndefs with predetermined ControlFiles and Specs.

classmethods::

method::new

Create a new ModMap to modulate Ndefs.

argument::
Fade time for ModMap.

instancemethods::

method::map

argument::
Input Ndef
argument::
key for argument to be modulated
argument::
key for type of modulation from ControlFiles
argument::
spec array
argument::
extraArguments for modulating signal (for example to control modulation frequency)
argument::
lag time
argument::
where to post?

Examples::

code::

s.boot;

b = SpecFile.read(\modulation, \freq1);

Ndef(\play1, {arg freq=300; SinOsc.ar(freq, 0, 0.2) }).play;
ModMap.map(Ndef(\play1), \freq, \sin, b, [\freq, rrand(1,10.0).postln]);


Ndef(\play2, {arg freq=300; Saw.ar(freq, 0.2) }).play;
ModMap.map(Ndef(\play2), \freq, \sin, b, [\freq, rrand(1,10.0).postln]);

ModMap.unmap(Ndef(\play1), \freq);

ModMap.map(Ndef(\play1), \freq, \sin, b, [\freq, rrand(1,10.0).postln]);

ModMap.unmap(Ndef(\play2), \freq, 1000);

ModMap.unmapAt(0);


Ndef.clear(5);



efSet 1 1 -> sin(0.2) //mul
prt -> lfn1(0.2,100,\lin) //mul, add, warp
prt -> lfn1[400,440,\exp] //minval, maxval, warp
efSet 1 1 500

::