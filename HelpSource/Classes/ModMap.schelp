class:: ModMap
summary:: A tool for modulating Ndefs
related:: Classes/Ndef
categories:: Libraries>JITLib>NodeProxy, LiveCoding

Description::

A tool for modulating Ndefs with predetermined ControlFiles and Specs.

classmethods::

method::new

Create a new ModMap to modulate Ndefs.

argument::
Fade time for ModMap.

instancemethods::

method::map

argument::
Input Ndef
argument::
key for argument to be modulated
argument::
key for type of modulation from ControlFiles
argument::
spec array
argument::
extraArguments for modulating signal (for example to control modulation frequency)
argument::
lag time
argument::
where to post?

Examples::

code::

s.boot;

a = SpecFile.read(\filter, \pch2);
b = a[0]; //get your specs from file...

n = ModMap(0.5); //fadeTime

Ndef(\play1, {arg freq=300; SinOsc.ar(freq, 0, 0.2) }).play;

Ndef(\play1).fadeTime = 1;

//args: inputNdef, argToModulate, modType, spec, extraArgs (freq of modSignal), lagTime),
~node1 = n.map(Ndef(\play1), \freq, \sin, b, [\freq, 1], n.fadeTime);

~spec1 = [400,320,\exp, {|val| val*1}];

~node1 = n.map(Ndef(\play1), \freq, \sin, ~spec1 );
~node1 = n.map(Ndef(\play1), \freq, \sin, b, [\freq, 1],0);

~node1.set(\freq, 10);

~node1 = n.map(Ndef(\play1), \freq, \sin, ~spec1, [\freq, 1], n.fadeTime);

//change mod frequency
~node1.set(\freq, 0.1);
~node1.set(\freq, 5);
~node1.set(\freq, 0.5);

//change spec using specAdj
~node1 = n.map(Ndef(\play1), \freq, \lfn1, b.specAdj(0.2, 1000), [\freq, 1], n.fadeTime);

~node1 = n.map(Ndef(\play1), \freq, \sin, b.specAdj(0.1, 0, warp:\lin).postln, [\freq, 10], n.fadeTime);

~node1 = n.map(Ndef(\play1), \freq, \lfn2, b.specAdj(minval: 400, maxval: 440).postln, [\freq, 5], n.fadeTime);

//new ndef
Ndef(\play2, {arg freq=300; Saw.ar(freq, 0.05) }).play;

Ndef(\play2).fadeTime = 1;

~spec2 = [400,320,\exp, {|val| val*1}];

~node2 = n.map(Ndef(\play2), \freq, \sin, ~spec2, [\freq, 0.1], n.fadeTime);

//change mod frequency
~node2.set(\freq, rrand(0.5,20));
~node2.set(\freq, 5);
~node2.set(\freq, 0.5);

~node2 = n.map(Ndef(\play2), \freq, \lfn1, ~spec2.specAdj(add: -40, minval: 400, maxval: 440), [\freq, 4], n.fadeTime);


Ndef(\play2).controlKeys;
~node2.setn(~node2.controlKeys[0], rrand(0.1,100).postln); //evaluate several times

~node1.setn(~node1.controlKeys[0], rrand(0.1,100).postln); //evaluate several times


n.unmap(~node1);
n.unmap(~node2);

Ndef.clear(5);



efSet 1 1 -> sin(0.2) //mul
prt -> lfn1(0.2,100,\lin) //mul, add, warp
prt -> lfn1[400,440,\exp] //minval, maxval, warp
efSet 1 1 500

::